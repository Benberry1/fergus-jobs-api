openapi: 3.0.2
x-stoplight:
  id: a7ime4fyhchil
info:
  version: "1.0"
  title: Welcome to the Grade Scale API!
  description: This API allows users to view the grade scale
  contact:
    name: Ben Berry
    url: benrhysberry.dev
    email: ben.berry@developersinstitute.co.nz
  license:
    name: example license
    url: exampleurl.com
servers:
  - url: "http://localhost:5001/api"
    description: Development server
paths:
  /jobs:
    get:
      summary: Returns the grade scale
      description: Get all jobs
      operationId: get-jobs
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Job"
              examples:
                example-1:
                  value:
                    - id: 1
                      status: scheduled
                      dateCreated: "2019-08-24T14:15:22Z"
                      notes:
                        - string
                      customer:
                        customer:
                          name: string
                          email: user@example.com
                          phone: "+64223215629"
                          address:
                            street: string
                            suburb: string
                            city: string
                            region: string
                            country: string
                            postcode: 9999
                    - id: 2
                      status: active
                      dateCreated: "2019-08-24T14:15:22Z"
                      notes:
                        - string
                      customer:
                        customer:
                          name: string
                          email: user@example.com
                          phone: "+64223215622"
                          address:
                            street: string
                            suburb: string
                            city: string
                            region: string
                            country: string
                            postcode: 9999
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                example-1:
                  value:
                    message: Internal Server Error
      parameters:
        - schema:
            type: integer
            minLength: 1
            minimum: 1
            default: 1
          in: query
          name: page
          description: Determines page of results
        - schema:
            type: integer
            minimum: 1
            maximum: 100
          in: query
          name: limit
          description: Determines how many results per page
        - schema:
            type: string
            enum:
              - status
              - customerName
              - date
              - jobId
          in: query
          name: sortBy
          description: Sorts the jobs depending on query passed
        - schema:
            type: string
            enum:
              - scheduled
              - active
              - invoicing
              - to price
              - completed
          in: query
          name: status
          description: Filters results by status
    parameters: []
  "/jobs/:id":
    get:
      summary: Your GET endpoint
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
              examples:
                example-1:
                  value:
                    id: 1
                    status: scheduled
                    dateCreated: "2019-08-24T14:15:22Z"
                    notes:
                      - string
                    customer:
                      customer:
                        name: string
                        email: user@example.com
                        phone: "0223215629"
                        address:
                          street: string
                          suburb: string
                          city: string
                          region: string
                          country: string
                          postcode: 9999
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                example-1:
                  value:
                    message: Please enter a valid id
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                example-1:
                  value:
                    message: Id does not exist
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                example-1:
                  value:
                    message: Internal Server Error
      operationId: get-jobs-id
      description: Gets a single job by id
      parameters:
        - schema:
            type: integer
            minimum: 1
          in: query
          name: id
          description: A specific job id
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                note:
                  type: string
              required:
                - note
        description: Append a note to the job database
    parameters: []
    put:
      summary: ""
      operationId: "put-jobs-:id"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
              examples:
                example-1:
                  value:
                    id: 1
                    status: scheduled
                    dateCreated: "2019-08-24T14:15:22Z"
                    notes:
                      - Example note
                    customer:
                      customer:
                        name: string
                        email: user@example.com
                        phone: "0223215625"
                        address:
                          street: string
                          suburb: string
                          city: string
                          region: string
                          country: string
                          postcode: 9999
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                example-1:
                  value:
                    message: Please ensure you have filled in the required field
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                example-1:
                  value:
                    message: Id does not exist
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                example-1:
                  value:
                    message: Internal Server Error
      description: Allows the user to add notes to the specific job
      parameters:
        - schema:
            type: integer
            minimum: 1
          in: query
          name: id
          description: A specific job id
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                notes:
                  type: string
            examples:
              example-1:
                value:
                  notes: Example note
        description: Add note to a specific job
components:
  schemas:
    Error:
      type: object
      properties:
        message:
          type: string
      x-examples:
        example-1:
          message: Internal Server Error
    Job:
      title: Job
      x-stoplight:
        id: dqzb912lnm5e2
      type: object
      description: Job & Customer information
      x-examples:
        example-1:
          id: 1
          status: scheduled
          dateCreated: "2019-08-24T14:15:22Z"
          customer:
            name: string
            email: string
            phone: string
            address:
              street: string
              suburb: string
              city: string
              region: string
              country: string
              postcode: 4112
      properties:
        id:
          type: integer
        status:
          type: string
          enum:
            - scheduled
            - active
            - invoicing
            - to price
            - completed
        dateCreated:
          type: string
          format: date-time
        notes:
          type: array
          nullable: true
          items:
            type: string
        customer:
          $ref: "#/components/schemas/Customer"
      required:
        - id
        - status
        - dateCreated
        - customer
    Customer:
      type: object
      x-examples:
        example-1:
          customer:
            name: string
            email: string
            phone: string
            address:
              street: string
              suburb: string
              city: string
              region: string
              country: string
              postcode: 4112
      properties:
        customer:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
              format: email
            phone:
              type: string
              maxLength: 12
              pattern: '^[\+]?[(]?[0-9]{3}[)]?[-\s\.]?[0-9]{3}[-\s\.]?[0-9]{4,6}$'
            address:
              type: object
              required:
                - street
                - city
                - region
                - country
                - postcode
              properties:
                street:
                  type: string
                suburb:
                  type: string
                  nullable: true
                city:
                  type: string
                region:
                  type: string
                country:
                  type: string
                postcode:
                  type: integer
                  maximum: 9999
          required:
            - name
            - email
            - phone
            - address
